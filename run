#!/bin/bash
# This script runs both Python scripts when a new file is created via lsyncd
# Note that 'moved_to' is used due to the way rsync works

DIR="/home/pi/FYP/test_images" #path to your image folder
PRINTCTRL="/home/pi/FYP/printcontrol.py" #path to printcontrol.py
GETSCORE="/home/pi/FYP/get_score.py" #path to get_score.py

usage() { echo -e "$0 usage:\n\tNo flag provided - Runs default, no logging and no debugging." && grep "[[:space:]].)\ #" $0 | sed 's/#//' | sed -r 's/([a-z])\)/-\1/'; exit 0; }
while getopts "dlh" arg; do
  case $arg in
	d) # Debug Mode - Logs output to logfile, does not run print control.
	  echo -e "DEBUG MODE. Logging Score output to logfile in image directory\nPrint Control disabled"
	  inotifywait -m -r -e moved_to --format '%w%f' "$DIR" | while read f
	  do
	    RES_DIR=${f%/*}
	    $GETSCORE "$f" | tee -a "$RES_DIR/output.log"
	  done
	  ;;
	l) # Logging Mode - Logs output to logfile.
	  echo "LOGGING MODE. Logging Score output to logfile in image directory"
	  inotifywait -m -r -e moved_to --format '%w%f' "$DIR" | while read f
	  do
	    RES_DIR=${f%/*}
	    $PRINTCTRL `$GETSCORE "$f" | tee -a "$RES_DIR/output.log"`
	  done
	  ;;
	h) # Help - Displays help.
	  usage
	  exit 0
	  ;;
  esac
done
if (( $OPTIND == 1 )); then
  inotifywait -m -r -e moved_to --format '%w%f' "$DIR" | while read f
  do
    $PRINTCTRL `$GETSCORE "$f"`
  done
fi
